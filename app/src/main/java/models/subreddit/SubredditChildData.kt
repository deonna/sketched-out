package models.subreddit

import com.fasterxml.jackson.annotation.JsonIgnoreProperties

@JsonIgnoreProperties(ignoreUnknown = true)
data class SubredditChildData(
    val all_awardings: List<Any> = listOf(),
    val allow_live_comments: Boolean = false,
    val approved_at_utc: Any? = null,
    val approved_by: Any? = null,
    val archived: Boolean = false,
    val author: String = "",
    val author_flair_background_color: String = "",
    val author_flair_css_class: String = "",
    val author_flair_richtext: List<Any> = listOf(),
    val author_flair_template_id: Any? = null,
    val author_flair_text: String = "",
    val author_flair_text_color: String = "",
    val author_flair_type: String = "",
    val author_fullname: String = "",
    val author_patreon_flair: Boolean = false,
    val banned_at_utc: Any? = null,
    val banned_by: Any? = null,
    val can_gild: Boolean = false,
    val can_mod_post: Boolean = false,
    val category: Any? = null,
    val clicked: Boolean = false,
    val content_categories: Any? = null,
    val contest_mode: Boolean = false,
    val created: Int = 0,
    val created_utc: Int = 0,
    val discussion_type: Any? = null,
    val distinguished: String = "",
    val domain: String = "",
    val downs: Int = 0,
    val edited: String = "", // can be boolean or long
    val gilded: Int = 0,
    val gildings: Gildings = Gildings.EMPTY,
    val hidden: Boolean = false,
    val hide_score: Boolean = false,
    val id: String = "",
    val is_crosspostable: Boolean = false,
    val is_meta: Boolean = false,
    val is_original_content: Boolean = false,
    val is_reddit_media_domain: Boolean = false,
    val is_robot_indexable: Boolean = false,
    val is_self: Boolean = false,
    val is_video: Boolean = false,
    val likes: Any? = null,
    val link_flair_background_color: String = "",
    val link_flair_css_class: Any? = null,
    val link_flair_richtext: List<Any> = listOf(),
    val link_flair_text: Any? = null,
    val link_flair_text_color: String = "",
    val link_flair_type: String = "",
    val locked: Boolean = false,
    val media: Any? = null,
    val media_embed: MediaEmbed = MediaEmbed.EMPTY,
    val media_only: Boolean = false,
    val mod_note: Any? = null,
    val mod_reason_by: Any? = null,
    val mod_reason_title: Any? = null,
    val mod_reports: List<Any> = listOf(),
    val name: String = "",
    val no_follow: Boolean = false,
    val num_comments: Int = 0,
    val num_crossposts: Int = 0,
    val num_reports: Any? = null,
    val over_18: Boolean = false,
    val parent_whitelist_status: String = "",
    val permalink: String = "",
    val pinned: Boolean = false,
    val pwls: Int = 0,
    val quarantine: Boolean = false,
    val removal_reason: Any? = null,
    val report_reasons: Any? = null,
    val saved: Boolean = false,
    val score: Int = 0,
    val secure_media: Any? = null,
    val secure_media_embed: SecureMediaEmbed = SecureMediaEmbed.EMPTY,
    val selftext: String = "",
    val selftext_html: String = "",
    val send_replies: Boolean = false,
    val spoiler: Boolean = false,
    val stickied: Boolean = false,
    val subreddit: String = "",
    val subreddit_id: String = "",
    val subreddit_name_prefixed: String = "",
    val subreddit_subscribers: Int = 0,
    val subreddit_type: String = "",
    val suggested_sort: Any? = null,
    val thumbnail: String = "",
    val title: String = "",
    val total_awards_received: Int = 0,
    val ups: Int = 0,
    val url: String = "",
    val user_reports: List<Any> = listOf(),
    val view_count: Any? = null,
    val visited: Boolean = false,
    val whitelist_status: String = "",
    val wls: Int = 0
) {
    companion object {
        val EMPTY = SubredditChildData()
    }
}